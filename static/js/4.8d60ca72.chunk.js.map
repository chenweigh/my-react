{"version":3,"sources":["components/Path/index.js","containers/Course/CourseList/index.js"],"names":["Path","item","index","this","props","handleClick","this__","data","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","map","key","concat","canClick","onClick","bind","title","Component","CourseList","_this","Object","_Users_chen_react_school_management_system_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_chen_react_school_management_system_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_chen_react_school_management_system_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","handleScroll","document","documentElement","scrollHeight","scrollTop","body","clientHeight","courseListRef","current","offsetTop","courseListHeight","offsetHeight","loadMore","console","log","courseActions","fetchNextData","handlePathClick","num","state","paths","length","history","go","React","createRef","push","categoryName","setState","fetchCourseListData","JSON","parse","stringify","from","live_course","pk","_this2","datas","onScroll","ref","_components_Path__WEBPACK_IMPORTED_MODULE_12__","border","course_code","course_name","class_time","teacher","class_teacher","number","handClick","connect","getCourse","getLoadMoreStatus","getSelectCategoryName","getPathsData","dispatch","bindActionCreators","CourseActions"],"mappings":"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","file":"static/js/4.8d60ca72.chunk.js","sourcesContent":["/**\n * 页面路径组件\n * data: [{ title: \"课程管理\", canClick: false }]\n */\nimport React, { Component } from \"react\";\nimport \"./style.css\";\n\nclass Path extends Component {\n  handleClick(item, index) {\n    if(this.props.handleClick){\n      this.props.handleClick(item, index);\n    }\n  }\n  render() {\n    var this__ = this;\n    const { data } = this.props;\n    return (\n      <div className=\"path\">\n        {data.map((item, index) => {\n          return (\n            <div\n              key={index}\n              className={`path__item ${item.canClick ? \"path__item--click\" : \"\"}`}\n              onClick={this__.handleClick.bind(this__, item, index)}>\n              {index !== 0 ? <span className=\"path__arrow\">></span> : null}\n              <span className=\"path__text\">{item.title} </span>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default Path;\n","import React, { Component } from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport \"./style.css\";\n\nimport { actions as CourseActions, getCourse, getLoadMoreStatus } from \"../../../redux/modules/course\";\nimport {getSelectCategoryName} from '../../../redux/modules/category';\nimport {getPathsData } from \"../../../redux/modules/home\";\n\nimport Path from \"../../../components/Path\";\n\nclass CourseList extends Component {\n  constructor(props) {\n    super(props);\n    this.courseListRef = React.createRef();\n    this.state = {\n      paths: this.props.paths\n    };\n  }\n  componentDidMount() {\n    // console.log(this.props);\n    if (this.state.paths.length < 3) {\n      let paths = this.state.paths;\n      paths.push({ title: this.props.categoryName, canClick: false });\n      this.setState({\n        paths: paths\n      });\n    }\n    this.props.courseActions.fetchCourseListData();\n  }\n  //处理屏幕滚动事件，实现加载更多的效果\n  handleScroll = () => {\n    let scrollHeight = document.documentElement.scrollHeight;\n    let scrollTop = document.documentElement.scrollTop || document.body.scrollTop;\n    let clientHeight = document.documentElement.clientHeight;\n    let courseListTop = this.courseListRef.current.offsetTop;\n    let courseListHeight = this.courseListRef.current.offsetHeight;\n    let courseListScrollHeight = this.courseListRef.current.scrollHeight;\n    let courseListScrollTop = this.courseListRef.current.scrollTop;\n    // console.log(\"scrollHeight:\",scrollHeight, \"scrollTop:\",scrollTop, \"clientHeight:\",clientHeight, \"courseListTop:\",this.courseListRef.current.offsetTop, \"courseListHeight:\",this.courseListRef.current.offsetHeight, \"courseListScrollHeight:\",courseListScrollHeight, \"courseListScrollTop:\",courseListScrollTop)\n    if (courseListScrollHeight <= courseListHeight + courseListScrollTop) {\n      //当内容高度小于可视高度+滚动条的高度时，触发事件\n      if (this.props.loadMore) {\n        console.log(\"还有更多数据，到达底部，继续加载新数据\");\n        this.props.courseActions.fetchNextData();\n      } else {\n        console.log(\"没有新数据了\");\n      }\n    } else {\n      console.log(\"没到底部\");\n    }\n  };\n  //查看学生点击事件\n  handClick(item, index){\n    console.log(\"paths--3\", this.state.paths);\n    // let data = Object.assign([], this.state.paths, []);\n    let data = JSON.parse(JSON.stringify(this.state.paths));   //这里用深拷贝\n    data[data.length - 1][\"canClick\"] = true;\n    data.push({ title: \"学生信息\", canClick: false });\n    this.props.history.push(\"/studentlist\", { from: \"/courselist\", paths: data, \"live_course\": item.pk});\n    console.log(\"paths--2\", this.state.paths);\n  };\n  //路径点击事件\n  handlePathClick = (item, index) => {\n    if(item.canClick){\n      let num = index - (this.state.paths.length - 1)\n      console.log(num);\n      this.props.history.go(num)\n    }\n  };\n  render() {\n    const { data: datas } = this.props;\n    const { paths } = this.state;\n    return (\n      <div className=\"courseList\" onScroll={this.handleScroll} ref={this.courseListRef}>\n        <Path data={paths} handleClick={this.handlePathClick} />\n        <div className=\"courseList__container\">\n          {datas.map((item, index) => {\n            return (\n              <div key={index} className=\"courseList__container__courseItem\">\n                <table className=\"courseList__container__courseItem__table\" border=\"1\">\n                  <tbody>\n                    <tr>\n                      <td className=\"courseList__container__courseItem__table--td\">课程名称</td>\n                      <td className=\"courseList__container__courseItem__table--td\">\n                        {item.course_code ? item.course_code : item.course_name}\n                      </td>\n                    </tr>\n                    <tr>\n                      <td className=\"courseList__container__courseItem__table--td\">开班时间</td>\n                      <td className=\"courseList__container__courseItem__table--td\">{item.class_time}</td>\n                    </tr>\n                  </tbody>\n                </table>\n                <div className=\"courseList__container__courseItem__courseInfo\">\n                  <p className=\"courseList__container__courseItem__courseInfo__item\">{`任课老师：${item.teacher}`}</p>\n                  <p className=\"courseList__container__courseItem__courseInfo__item\">\n                    {`班主任：${item.class_teacher}`}\n                  </p>\n                  <p className=\"courseList__container__courseItem__courseInfo__item\">{`报名人数：${item.number} 人`}</p>\n                </div>\n                <div className=\"courseList__container__courseItem__btn\">\n                  <span className=\"courseList__container__courseItem__btn__watchStudent\" onClick={this.handClick.bind(this, item, index)}>\n                    查看学生\n                  </span>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n    data: getCourse(state),\n    loadMore: getLoadMoreStatus(state),\n    categoryName:getSelectCategoryName(state),\n    paths: getPathsData(state),\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    courseActions: bindActionCreators(CourseActions, dispatch)\n  };\n};\n// connect()接受两个参数，参数都是函数\n// connect() 函数返回值依然是个函数，接受一个参数，组件.\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CourseList);\n"],"sourceRoot":""}